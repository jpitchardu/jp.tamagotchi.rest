// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: jp.tamagotchi.proto.business/service/user/userService.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Jp.Tamagotchi.Business.Shared.Services.User {
  public static partial class UserService
  {
    static readonly string __ServiceName = "jp.tamagotchi.business.shared.services.user.UserService";

    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest> __Marshaller_SaveUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse> __Marshaller_SaveUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest> __Marshaller_GetUsersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse> __Marshaller_GetUsersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest, global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse> __Method_SaveUser = new grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest, global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveUser",
        __Marshaller_SaveUserRequest,
        __Marshaller_SaveUserResponse);

    static readonly grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest, global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse> __Method_GetUsers = new grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest, global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_GetUsersRequest,
        __Marshaller_GetUsersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Jp.Tamagotchi.Business.Shared.Services.User.UserServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    public abstract partial class UserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse> SaveUser(global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse> GetUsers(global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse SaveUser(global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SaveUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse SaveUser(global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse> SaveUserAsync(global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SaveUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserResponse> SaveUserAsync(global::Jp.Tamagotchi.Business.Shared.Services.User.SaveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveUser, null, options, request);
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse GetUsers(global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse GetUsers(global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse> GetUsersAsync(global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersResponse> GetUsersAsync(global::Jp.Tamagotchi.Business.Shared.Services.User.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsers, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SaveUser, serviceImpl.SaveUser)
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers).Build();
    }

  }
}
#endregion
