// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: jp.tamagotchi.proto.business/service/pet/petService.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Jp.Tamagotchi.Business.Shared.Services.Pet {
  public static partial class PetService
  {
    static readonly string __ServiceName = "jp.tamagotchi.business.shared.services.pet.PetService";

    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest> __Marshaller_SavePetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse> __Marshaller_SavePetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest> __Marshaller_GetPetsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse> __Marshaller_GetPetsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest, global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse> __Method_SavePet = new grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest, global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SavePet",
        __Marshaller_SavePetRequest,
        __Marshaller_SavePetResponse);

    static readonly grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest, global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse> __Method_GetPets = new grpc::Method<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest, global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPets",
        __Marshaller_GetPetsRequest,
        __Marshaller_GetPetsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Jp.Tamagotchi.Business.Shared.Services.Pet.PetServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PetService</summary>
    public abstract partial class PetServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse> SavePet(global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse> GetPets(global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PetService</summary>
    public partial class PetServiceClient : grpc::ClientBase<PetServiceClient>
    {
      /// <summary>Creates a new client for PetService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PetServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PetService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PetServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PetServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PetServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse SavePet(global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SavePet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse SavePet(global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SavePet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse> SavePetAsync(global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SavePetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetResponse> SavePetAsync(global::Jp.Tamagotchi.Business.Shared.Services.Pet.SavePetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SavePet, null, options, request);
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse GetPets(global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse GetPets(global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPets, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse> GetPetsAsync(global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsResponse> GetPetsAsync(global::Jp.Tamagotchi.Business.Shared.Services.Pet.GetPetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPets, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PetServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PetServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PetServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SavePet, serviceImpl.SavePet)
          .AddMethod(__Method_GetPets, serviceImpl.GetPets).Build();
    }

  }
}
#endregion
